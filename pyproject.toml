[tool.poetry]
name = "RTN"
version = "0.1.0"
description = "parse-torrent-title, but with ranks"
authors = ["Eru Iluvatar <eruiluvatar@pnbx.xyz>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
parse-torrent-name = "^1.1.1"
pydantic = "^2.6.3"


[tool.poetry.group.dev.dependencies]
ruff = "^0.3.0"
pyright = "^1.1.352"
pytest = "^8.0.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pyright]
strict = ["*.py"]
exclude = ["typings", ".direnv", ".git", ".pyenv", ".pytest_cache", ".pytype", ".ruff_cache", ".vscode", "__pypackages__", "_build", "build", "dist", "venv"]
typeCheckingMode = "strict"
useLibraryCodeForTypes = false
reportMissingImports = true
reportUnusedVariable = true
reportUnusedFunction = true
reportUnusedImport = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
line-length = 100
exclude = [ ".direnv", ".git", ".pyenv", ".pytest_cache", ".pytype", ".ruff_cache", ".vscode", "__pypackages__", "_build", "build", "dist", "typings", "venv"]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
ignore = [
  "PLR0913", # flask8-bugbear: Too many arguments for a method or function
  "PLR0911", # flask8-bugbear: Too many return statements
  "PLR2004", # flake8-bugbear: Magic value used in comparison
  "S104", # flake8-bandit: Possible binding to all interfaces
  "S108", # flake8-bandit: Probable insecure usage of temp file/directory
  "S311", # flake8-bandit: Standard pseudo-random generators are not suitable for security/cryptographic purposes
]
extend-select = [
  "I",   # isort
  "C90", # mccabe complexity
  "B",   # flake8-bugbear
  "PL",  # pycodestyle
  "S",   # flake8-bandit
  "T10", # flake8-debugger
  "PIE", # flake8-pie
  "T20", # flake8-print
  "Q",   # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
]

[tool.ruff.lint.isort]
case-sensitive = true


[tool.pytest.ini_options]
filterwarnings = ["ignore::UserWarning", "ignore::DeprecationWarning"]
log_cli_level = "CRITICAL"
testpaths = ["tests"]
addopts = "-v --durations=0"
cache_dir = ".cache/pytest_cache"
